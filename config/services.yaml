# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    db_password: '1234'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        # Option 3) Déclaration des arguments manquants.
        #bind:
        #    $omdbToken: 28c5b7b1
        #    $omdbHost: https://www.omdbapi.com

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Option 2) déclaration partielle de service
    App\Omdb\OmdbClient:
        arguments:
            $omdbToken: '%env(OMDB_TOKEN)%'
            $omdbHost: https://www.omdbapi.com
    #    calls:
    #        - setLogger: ['@logger']
    #        - setEntityManager: ['@doctrine']

    #$api = new OmdbClient(new HttpClient(), '28c', 'https://www.omdbapi.com');
    #$api->setLogger(new Logger());
    # Option 1) déclaration complete de service
    #App\Omdb\OmdbClient:
    #    autowire: false # Evite que Symfony l'enregistre automatiquement en tant que service (désactive l'autowiring)
    #    arguments:
    #        $omdbClient: '@Symfony\Contracts\HttpClient\HttpClientInterface'
    #        $omdbToken: 28c5b7b1
    #        $omdbHost: https://www.omdbapi.com